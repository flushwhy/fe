name: Release Build and Upload

# This workflow runs when a new release is published on GitHub.
on:
  release:
    types: [published]

jobs:
  # The 'build' job compiles the application for different platforms.
  build:
    name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: windows
            goarch: amd64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: linux
            goarch: amd64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'

      - name: Set output binary name and extension
        id: vars
        run: |
          # Set the base name for the binary.
          binary_name="fe"
          # Add .exe extension for Windows builds.
          if [ "${{ matrix.goos }}" = "windows" ]; then
            echo "binary_name_ext=${binary_name}.exe" >> $GITHUB_OUTPUT
            echo "archive_name=${binary_name}-${{ matrix.goos }}-${{ matrix.goarch }}.zip" >> $GITHUB_OUTPUT
          else
            echo "binary_name_ext=${binary_name}" >> $GITHUB_OUTPUT
            echo "archive_name=${binary_name}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz" >> $GITHUB_OUTPUT
          fi

      - name: Build binary
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags="-s -w" -o "build/${{ steps.vars.outputs.binary_name_ext }}" .
      
      - name: Create release archive
        run: |
          cd build
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip ../${{ steps.vars.outputs.archive_name }} ${{ steps.vars.outputs.binary_name_ext }}
          else
            tar -czvf ../${{ steps.vars.outputs.archive_name }} ${{ steps.vars.outputs.binary_name_ext }}
          fi
          cd ..

      - name: Upload artifact for release job
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.vars.outputs.archive_name }}
          path: ${{ steps.vars.outputs.archive_name }}

  release:
    name: Upload Release Assets
    runs-on: ubuntu-latest

    needs: build
    
    steps:
      - name: Download all release artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: Upload assets to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release-artifacts/*/*
